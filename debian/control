Source: embryo
Section: libs
Priority: optional
Maintainer: E17 Debian Team <debian@edevelop.org>
Build-Depends: debhelper (>= 4.0.0), automake1.7 | automaken, libtool
Standards-Version: 3.6.0

Package: embryo0-bin
Section: compilers
Architecture: any
Provides: embryo-bin
Depends: ${shlibs:Depends}
Description: SMALL compiler creating Embryo bytecode
 This package contains the compiler embryo_cc.

Package: embryo0-debug
Section: compilers
Architecture: any
Provides: embryo-debug
Depends: ${shlibs:Depends}
Description: Debugging execution utility for embryo compiled bytecode.

Package: libembryo0-dev
Section: libdevel
Architecture: any
Provides: libembryo-dev
Depends: libembryo0 (= ${Source-Version})
Description: Development files for libembryo0
 Headers, static libraries and documentation for Embryo.

Package: libembryo0
Section: libs
Architecture: any
Provides: libembryo
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: embryo0-bin (= ${Source-Version})
Description: SMALL-based abstract machine (AMX) bytecode interpreter
 Embryo is primarily a shared library that gives you an API to load
 and control interpreted programs compiled into an abstract machine
 bytecode that it understands.  This abstract (or virtual) machine is
 similar to a real machine with a CPU, but it is emulated in
 software.  The architecture is simple and is the same as the
 abstract machine (AMX) in the SMALL language as it is based on
 exactly the same code. Embryo has modified the code for the AMX
 extensively and has made it smaller and more portable.  It is VERY
 small.  The total size of the virtual machine code AND header files
 is less than 2500 lines of code.  It includes the floating point
 library support by default as well.  This makes it one of the
 smallest interpreters around, and thus makes is very efficient to
 use in code.
 .
 See also http://www.compuphase.com/small.htm for details on SMALL.
